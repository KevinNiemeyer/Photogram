{"version":3,"sources":["assets/logo.png","assets/magnifying-glass.png","components/Logo/index.jsx","components/Dropdown/index.js","components/SearchBar/index.jsx","components/Header/index.jsx","components/Modal/index.jsx","components/Photo/index.jsx","unsplash.js","components/UserLink/index.jsx","components/SelectView/index.jsx","components/GoToTop/index.jsx","components/ui/styles.js","pages/Landing/index.jsx","components/UserInfo/index.jsx","pages/User/index.jsx","pages/Search/UserSearch/index.jsx","pages/Search/CollectionsSearch/index.jsx","pages/Collection/index.jsx","pages/Search/PhotosSearch/index.jsx","pages/Favorites/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Img","img","H2","h2","Logo","style","textDecoration","to","src","logo","React","Component","createContext","Wrapper","DropButton","button","DropdownContent","Button","Dropdown","props","useState","category","setCategory","handleClick","e","console","log","target","value","handleCategoryChange","className","id","onClick","Form","form","Input","input","withRouter","searchTerm","setSearchTerm","onSubmit","history","push","document","getElementById","toLowerCase","required","onChange","type","placeholder","MagnifyingGlassIcon","alt","Nav","ButtonContainer","Header","preventDefault","state","this","ModalImage","landscape","css","Close","span","Modal","show","photo","onClose","ColumnPhoto","GridPhoto","FavIcon","hide","AddMsg","showAdd","hidePhoto","Photo","favorite","exists","msg","isFavoritePage","toggleModal","setState","addFavorite","storedFavorites","JSON","parse","localStorage","getItem","filter","length","setItem","stringify","setTimeout","isGrid","urls","small","regular","alt_description","match","path","data-tip","place","effect","full","unsplash","Unsplash","accessKey","LinkContainer","StyledLink","Link","pStyle","paddingLeft","UserLink","user","username","name","profile_image","RadioGroup","ul","SelectView","hr","LayoutContext","Consumer","toggleView","checked","for","isColumn","showButton","TopHat","GoToTop","toTop","body","scrollTop","documentElement","window","onscroll","Heading","h1","alignItems","Results","PhotoContainer","HR","Loader","Landing","photos","setPhotos","page","setPage","getData","listPhotos","then","toJson","json","useEffect","pageStart","loadMore","hasMore","loader","key","map","height","width","UserInfoContainer","UserInfoRow","Username","FullName","UserInfo","large","total_collections","total_photos","total_likes","TitleBar","UserPage","users","params","userName","User","LinkTitle","linkStyle","fontSize","padding","SearchTerm","UserSearch","setUsers","setHasMore","totalPages","setTotalPages","search","results","total_pages","Collection","CollectionSearch","collections","setCollections","collection","title","cover_photo","getCollectionPhotos","PhotoSearch","orientation","Remove","Favorites","favorites","setFavorites","a","photoToRemove","photoId","nextFavorite","removeFavorite","FourOhFour","App","isList","currentValues","Object","keys","forEach","prop","gridSettings","Provider","exact","component","LandingPage","CollectionsSearch","PhotosSearch","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c56db5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.de6873fc.png\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.cb625baf.png\";","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport logo from '../../assets/logo.png';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 33%;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 30px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  position: relative;\r\n  font-family: 'Dancing Script', cursive;\r\n  font-size: 30px;\r\n  padding-left: 17px;\r\n  color: black;\r\n  &::before {\r\n    position: absolute;\r\n    content: '';\r\n    background-color: black;\r\n    width: 1px;\r\n    height: 1em;\r\n\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nclass Logo extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Link style={{ textDecoration: 'none' }} to='/'>\r\n          <Img src={logo} />\r\n        </Link>\r\n\r\n        <Link style={{ textDecoration: 'none' }} to='/'>\r\n          <H2>Photogram</H2>\r\n        </Link>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","//getting an issue where the first search you do works, but if you type in a different search term,\r\n//it still displays the first search\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport const CategoryContext = React.createContext();\r\n\r\nconst Wrapper = styled.div`\r\n\tposition: relative;\r\n\tdisplay: inline-block;\r\n\tmin-width: 75px;\r\n\toutline: none;\r\n\tborder-radius: 0 0 3px 3px;\r\n\t&:hover div {\r\n\t\tdisplay: block;\r\n\t}\r\n`;\r\n\r\nconst DropButton = styled.button`\r\n\tbackground-color: rgb(250, 250, 250);\r\n\tcolor: rgb(0, 0, 0);\r\n\tpadding: 7px 12px 7px 12px;\r\n\tfont-size: 16px;\r\n\twidth: 100px;\r\n\tborder: solid lightgrey 1px;\r\n\toutline: none;\r\n\tborder-top: red;\r\n\tborder-bottom: red;\r\n\tborder-left: red;\r\n\tborder-radius: 3px 0 0 3px;\r\n\t&:hover {\r\n\t\tborder-radius: 3px 0 0 0;\r\n\t}\r\n`;\r\nconst DropdownContent = styled.div`\r\n\tdisplay: none;\r\n\tposition: absolute;\r\n\tbackground-color: rgb(250, 250, 250);\r\n\tmin-width: 75px;\r\n\tbox-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n\tborder-radius: 0 0 3px 3px;\r\n\tz-index: 1;\r\n`;\r\n\r\nconst Button = styled.button`\r\n\tcolor: black;\r\n\tpadding: 10px;\r\n\tfont-size: 1rem;\r\n\ttext-decoration: none;\r\n\tdisplay: block;\r\n\tborder: none;\r\n\toutline: none;\r\n\twidth: 100%;\r\n\t&:hover {\r\n\t\tbackground-color: rgb(255, 0, 0, 0.8);\r\n\t}\r\n\t&:active {\r\n\t\tbackground-color: rgb(255, 0, 0, 0.3);\r\n\t}\r\n\t&:last-child {\r\n\t\tborder-radius: 0 0 3px 3px;\r\n\t}\r\n`;\r\n\r\nconst Dropdown = (props) => {\r\n\tconst [ category, setCategory ] = useState('Category');\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tconsole.log(e.target.value);\r\n\t\tsetCategory(e.target.value);\r\n\t\tprops.handleCategoryChange(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Wrapper className='dropdown'>\r\n\t\t\t<DropButton id='dropbtn' className='dropbtn'>\r\n\t\t\t\t{category}\r\n\t\t\t</DropButton>\r\n\t\t\t<DropdownContent className='dropdown-content'>\r\n\t\t\t\t<Button id='btn1' onClick={handleClick} value='Users'>\r\n\t\t\t\t\tUsers\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button id='btn2' onClick={handleClick} value='Collections'>\r\n\t\t\t\t\tCollections\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button id='btn3' onClick={handleClick} value='Photos'>\r\n\t\t\t\t\tPhotos\r\n\t\t\t\t</Button>\r\n\t\t\t</DropdownContent>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\nexport default Dropdown;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport MagnifyingGlassIcon from '../../assets/magnifying-glass.png';\r\nimport styled from 'styled-components';\r\nimport Dropdown from '../Dropdown';\r\nimport { CategoryContext } from '../Dropdown';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 33%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  min-height: 25px;\r\n  padding-left: 10px;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px 0 10px;\r\n  background-color: rgb(250, 250, 250);\r\n  border-radius: 0 3px 3px 0;\r\n  outline: none;\r\n  border: none;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n  &:active img {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 15px;\r\n  height: 15px;\r\n`;\r\n\r\nconst SearchBar = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [category, setCategory] = useState('Category');\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value.toLowerCase());\r\n  };\r\n  const handleCategoryChange = (value) => {\r\n    if (value) {\r\n      setCategory(value.toLowerCase());\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (searchTerm && category) {\r\n      props.history.push(`/search/${category}/${searchTerm}`);\r\n      console.log(this.props.history);\r\n    }\r\n    document.getElementById('search-input').value = '';\r\n  };\r\n  //can't get it to select the same category with a different search term\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Dropdown id='dropdown' handleCategoryChange={handleCategoryChange} />\r\n\r\n      {/* <select id='select-box' required onChange={this.handleCategoryChange}>\r\n          <option value='' default selected disabled hidden>\r\n            Category\r\n          </option>\r\n          <option value='User'>Users</option>\r\n          <option value='Collections'>Collections</option>\r\n          <option value='Photos'>Photos</option>\r\n        </select>\r\n    */}\r\n      <Input\r\n        id='search-input'\r\n        required\r\n        onChange={handleSearchChange}\r\n        type='text'\r\n        placeholder='Search'\r\n      />\r\n\r\n      <Button type='submit'>\r\n        <Img src={MagnifyingGlassIcon} alt='magnifying-glass' />\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withRouter(SearchBar);\r\n","import React from 'react';\r\nimport Logo from '../Logo/index.jsx';\r\nimport SearchBar from '../SearchBar';\r\nimport styled from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Nav = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 75px;\r\n  border-bottom: solid 1px lightgrey;\r\n  background-color: red;\r\n  z-index: 4;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  width: 33%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Button = styled.button`\r\n  color: rgb(255, 0, 0);\r\n  font-size: 16px;\r\n  width: auto;\r\n  padding: 5px 20px 5px 20px;\r\n  margin-left: 100px;\r\n  border: solid lightgrey 1px;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  &:hover {\r\n    opacity: (0.8);\r\n  }\r\n  &:active {\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nclass Header extends React.Component {\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push(`/favorites`);\r\n  };\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <Nav>\r\n        <Logo />\r\n        <SearchBar />\r\n        <ButtonContainer>\r\n          <Button onClick={this.handleClick}>Favorites</Button>\r\n        </ButtonContainer>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  border: solid black 1px;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 11;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  transition: 0.3s;\r\n  text-align: center;\r\n`;\r\n\r\nconst ModalImage = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  width: auto;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  ${props =>\r\n    props.landscape\r\n      ? css`\r\n          width: 100%;\r\n        `\r\n      : css`\r\n          height: 100%;\r\n        `} /* Set rules to fill background */\r\n\r\n\r\n  /* Set up proportionate scaling */\r\n\r\n  /* Set up positioning */\r\n`;\r\n\r\nconst Close = styled.span`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  padding: 20px;\r\n  -webkit-text-fill-color: white;\r\n  -webkit-text-stroke-width: 1px;\r\n  -webkit-text-stroke-color: black;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  z-index: 10;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst Modal = props => {\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Container id='container'>\r\n      <ModalImage id='modal-image'>\r\n        <Img\r\n          src={props.photo}\r\n          alt='nada'\r\n          onClick={props.onClose}\r\n          landscape={props.landscape}></Img>\r\n        <Close onClick={props.onClose}>&times;</Close>\r\n      </ModalImage>\r\n    </Container>\r\n  );\r\n};\r\n\r\n/*<Img\r\nlandscape={props.landscape}\r\nsrc={props.photo}\r\nalt='nada'\r\nonClick={props.onClose}\r\n/>*/\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\nimport Modal from '../Modal';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n`;\r\n\r\nconst ColumnPhoto = styled.img`\r\n  display: flex;\r\n  justify-content: center;\r\n  background: url(${props => props.src}) no-repeat center center;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  ${props =>\r\n    props.landscape\r\n      ? css`\r\n          width: 100%;\r\n        `\r\n      : css`\r\n          height: 100%;\r\n        `}\r\n`;\r\n\r\nconst GridPhoto = styled.img`\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  width: 100%;\r\n  height: 200px;\r\n  background: url(${props => props.src}) no-repeat center center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst FavIcon = styled.div`\r\n  color: red;\r\n  position: absolute;\r\n  font-size: 24px;\r\n  top: 10px;\r\n  left: 10px;\r\n  -webkit-text-stroke: 2px red;\r\n  -webkit-text-fill-color: transparent;\r\n  &:active {\r\n    transform: scale(0.9);\r\n    -webkit-text-fill-color: red;\r\n  }\r\n  ${props =>\r\n    props.hide &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nconst AddMsg = styled.div`\r\n  position: absolute;\r\n  top: -75px;\r\n  left: 0px;\r\n  right: 0px;\r\n  width: 100%;\r\n  text-align: center;\r\n  transition: all 0.2s ease-in-out;\r\n  background-color: rgb(247, 154, 120);\r\n  padding: 5px;\r\n  border-radius: 3px;\r\n\r\n  ${props =>\r\n    props.showAdd\r\n      ? css`\r\n          opacity: 1;\r\n        `\r\n      : css`\r\n          opacity: 0;\r\n        `}\r\n`;\r\n\r\nconst hidePhoto = {\r\n  '/favorites': true,\r\n  '/random': true\r\n};\r\n\r\nclass Photo extends Component {\r\n  state = {\r\n    show: false,\r\n    favorite: false,\r\n    exists: false,\r\n    showAdd: false,\r\n    msg: '',\r\n    isFavoritePage: false\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n\r\n  addFavorite = () => {\r\n    let storedFavorites = JSON.parse(localStorage.getItem('favorites'));\r\n\r\n    if (!storedFavorites) {\r\n      storedFavorites = [];\r\n    }\r\n\r\n    var tmpArr = storedFavorites.filter(photo => {\r\n      return this.props.photo.id === photo.id;\r\n    });\r\n\r\n    if (tmpArr.length) {\r\n      this.setState({ msg: 'That photo is already in your favorites.' });\r\n      this.setState({ exists: true });\r\n    } else {\r\n      this.setState({ exists: false });\r\n      storedFavorites.push(this.props.photo);\r\n      localStorage.setItem('favorites', JSON.stringify(storedFavorites));\r\n      this.setState({ favorite: true });\r\n      this.setState({ msg: 'Photo added to favorites.' });\r\n    }\r\n    this.setState({ showAdd: true });\r\n    setTimeout(() => {\r\n      this.setState({ showAdd: false });\r\n    }, 1500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container id='photo-container'>\r\n        {this.props.isGrid ? (\r\n          <GridPhoto\r\n            landscape={this.props.landscape}\r\n            src={this.props.photo.urls.small}\r\n            onClick={this.toggleModal}\r\n          />\r\n        ) : (\r\n          <ColumnPhoto\r\n            landscape={this.props.landscape}\r\n            id='column-photo-img'\r\n            onClick={this.toggleModal}\r\n            src={this.props.photo.urls.regular}\r\n            alt={this.props.photo.alt_description}\r\n          />\r\n        )}\r\n        <FavIcon\r\n          hide={hidePhoto[this.props.match.path]}\r\n          data-tip='Add to favorites'\r\n          onClick={this.addFavorite}>\r\n          &hearts;\r\n        </FavIcon>\r\n        <ReactTooltip type='info' place='top' effect='solid' />\r\n        <Modal\r\n          id='modal'\r\n          onClose={this.toggleModal}\r\n          show={this.state.show}\r\n          photo={this.props.photo.urls.full}\r\n        />\r\n        <AddMsg showAdd={this.state.showAdd}>{this.state.msg}</AddMsg>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Photo);\r\n","import Unsplash from 'unsplash-js';\r\nexport const unsplash = new Unsplash({\r\n  accessKey: 'f60e5cafcb3b8080fd0df608e7a86a7fc207ebb0fbba65f2e14ac75d130babc0',\r\n});\r\n\r\n// d05fe364f186af88c5fc71e646845374ca9d2a99aaf8c8ef9e4cc1c058e6bae5\r\n\r\n// deeaf0db05cb33f1ce444c03c075d393261f1f5789c4cb94cdeeef9b1e020fa4\r\n\r\n// f60e5cafcb3b8080fd0df608e7a86a7fc207ebb0fbba65f2e14ac75d130babc0\r\n\r\n//2c3e172d585783910133a3b7c26b7c24a7dde925f6da708538cddf8081a4b009\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst LinkContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: rgb(247, 154, 120);\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst pStyle = {\r\n  paddingLeft: '10px'\r\n};\r\n\r\nclass UserLink extends Component {\r\n  render() {\r\n    return (\r\n      <LinkContainer id='userlink-container'>\r\n        <StyledLink id='userlink-link' to={`/user/${this.props.user.username}`}>\r\n          <Img\r\n            id='userlink-image'\r\n            alt={this.props.user.name}\r\n            src={this.props.user.profile_image.small}\r\n          />\r\n          <p style={pStyle}>{this.props.user.name}</p>\r\n        </StyledLink>\r\n      </LinkContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserLink;\r\n","//need to create select view functionality and styling\r\n\r\nimport React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { LayoutContext } from '../../App';\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  margin-left: 155px;\r\n  font-size: 16px;\r\n  align-items: center;\r\n  padding: 10px 0 15px 0;\r\n\r\n  margin-bottom: 20px;\r\n  background-color: rgb(250, 250, 250);\r\n  & h3 {\r\n    width: 100%;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst RadioGroup = styled.ul`\r\n  width: 100%;\r\n  list-style-type: none;\r\n  margin: 10px 0 0 0;\r\n  padding: 0;\r\n  display: flex;\r\n  & li {\r\n    margin: 0 0 0 0;\r\n    width: 85px;\r\n    height: 35px;\r\n    position: relative;\r\n    &:hover {\r\n      background: rgb(255, 0, 0, 0.7);\r\n    }\r\n    &:active {\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n  & label,\r\n  & input {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    &[type='radio'] {\r\n      opacity: 0.01;\r\n      z-index: 100;\r\n      &:checked + label {\r\n        background: rgb(255, 0, 0);\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst HR = styled.hr`\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-style: inset;\r\n  border-width: 1px;\r\n`;\r\n\r\nexport class SelectView extends Component {\r\n  render() {\r\n    return (\r\n      <LayoutContext.Consumer>\r\n        {(value) => {\r\n          return (\r\n            <ButtonContainer id='select-view-container'>\r\n              <h3>View:</h3>\r\n\r\n              <RadioGroup className='selectButtons'>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    id='grid'\r\n                    onChange={value.toggleView}\r\n                    name='isGrid'\r\n                    checked={value.isGrid ? true : false}\r\n                  />\r\n                  <label for='grid'>Grid</label>\r\n                </li>\r\n\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    id='column'\r\n                    onChange={value.toggleView}\r\n                    name='isColumn'\r\n                    checked={value.isColumn ? true : false}\r\n                  />\r\n                  <label for='column'>Column</label>\r\n                </li>\r\n              </RadioGroup>\r\n            </ButtonContainer>\r\n          );\r\n        }}\r\n      </LayoutContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectView;\r\n","import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { LayoutContext } from '../../App';\r\n\r\nconst Container = styled.div`\r\n  background: rgb(255, 0, 0);\r\n  ${props =>\r\n    props.showButton\r\n      ? css`\r\n          display: flex;\r\n        `\r\n      : css`\r\n          display: none;\r\n        `}\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  right: 55px;\r\n  top: 100px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n  transition: 0.2s;\r\n`;\r\n\r\nconst TopHat = styled.span`\r\n  -webkit-text-fill-color: white;\r\n  -webkit-text-stroke-width: 1px;\r\n  -webkit-text-stroke-color: black;\r\n  font-size: 36px;\r\n  top: 5px;\r\n  left: 7px;\r\n  position: absolute;\r\n  z-index: 2;\r\n  font-weight: bold;\r\n`;\r\n\r\nclass GoToTop extends Component {\r\n  state = {\r\n    showButton: false\r\n  };\r\n\r\n  // trying to get the arrow to appear/disappear when it is at the top of the page\r\n  componentDidMount() {\r\n    window.onscroll = () => {\r\n      if (\r\n        document.body.scrollTop > 20 ||\r\n        document.documentElement.scrollTop > 20\r\n      ) {\r\n        this.setState({ showButton: true });\r\n      } else {\r\n        this.setState({ showButton: false });\r\n      }\r\n    };\r\n  }\r\n\r\n  toTop = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <LayoutContext.Consumer>\r\n        {value => {\r\n          return (\r\n            <Container\r\n              id='goToTop'\r\n              onClick={this.toTop}\r\n              showButton={this.state.showButton}>\r\n              <TopHat>&#94;</TopHat>\r\n            </Container>\r\n          );\r\n        }}\r\n      </LayoutContext.Consumer>\r\n    );\r\n  }\r\n  f;\r\n}\r\n\r\nexport default GoToTop;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Heading = styled.h1`\r\n  font-size: 32px;\r\n  font-weight: 800;\r\n  margin: 15px 0 15px 0;\r\n  padding-left: 155px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  ${props =>\r\n    props.alignItems &&\r\n    css`\r\n      align-items: ${props.alignItems};\r\n    `}\r\n`;\r\n","//getting an issue where the first search you do works, but if you type in a different search term,\r\n//it still displays the first search\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Photo from '../../components/Photo';\r\nimport { unsplash } from '../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport UserLink from '../../components/UserLink';\r\nimport { LayoutContext } from '../../App';\r\nimport SelectView from '../../components/SelectView';\r\nimport GoToTop from '../../components/GoToTop';\r\nimport { Heading } from '../../components/ui/styles';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 50px 20px 20px 20px;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  ${props =>\r\n    props.landscape\r\n      ? css`\r\n          width: 80vw;\r\n        `\r\n      : css`\r\n          height: 80vh;\r\n        `}\r\n    ${props =>\r\n      props.isGrid &&\r\n      css`\r\n        display: flex;\r\n        width: 250px;\r\n        height: 100%;\r\n        padding-left: 15px;\r\n        padding-right: 15px;\r\n      `}\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      flex: 1;\r\n      width: 50%;\r\n    `}\r\n`;\r\n\r\nconst HR = styled.hr`\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-style: inset;\r\n  border-width: 1px;\r\n  background-color: red;\r\n`;\r\nconst Loader = styled.div``;\r\n\r\nconst Landing = () => {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getData = () => {\r\n    unsplash.photos\r\n      .listPhotos(page, 25, 'latest')\r\n      .then(toJson)\r\n      .then(json => {\r\n        setPhotos([...photos, ...json]);\r\n        setPage(page + 1);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  if (photos.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {value => {\r\n        return (\r\n          <Container id='landing-container'>\r\n            <GoToTop />\r\n            <Heading id='landing-heading'>Latest Photos:</Heading>\r\n            <SelectView value={value}></SelectView>\r\n            <HR />\r\n            <InfiniteScroll\r\n              id='infinite-scroll'\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading ...</Loader>}>\r\n              <Results\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}\r\n                id='landing-results'>\r\n                {photos.map(photo => {\r\n                  const { height, width } = photo;\r\n                  return (\r\n                    <PhotoContainer\r\n                      key={photo.id}\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}\r\n                      landscape={width > height}\r\n                      id='result-container'>\r\n                      <UserLink\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        key={photo.user.id}\r\n                        id='userlink'\r\n                        user={photo.user}\r\n                      />\r\n                      <Photo\r\n                        landscape={width > height}\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        id='photo'\r\n                        key={photo.id}\r\n                        photo={photo}\r\n                      />\r\n                    </PhotoContainer>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  width: 50%;\r\n  padding: 20px;\r\n  align-items: center;\r\n  border-bottom: solid lightgrey;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 150px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst UserInfoContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst UserInfoRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: auto;\r\n  padding: 12px 0px 12px 40px;\r\n  box-sizing: content-box;\r\n`;\r\n\r\nconst Username = styled.div`\r\n  font-size: 28px;\r\n  font-weight: 200;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-weight: bold;\r\n  font-size: 1.2em;\r\n  color: rgb(247, 154, 120);\r\n`;\r\n\r\nexport default function UserInfo({ user }) {\r\n  if (!user) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Container>\r\n      <Img src={user.profile_image.large} alt={user.username} />\r\n\r\n      <UserInfoContainer>\r\n        <UserInfoRow>\r\n          <Username>{user.username}</Username>\r\n        </UserInfoRow>\r\n        <UserInfoRow>\r\n          <div>{user.total_collections} collections</div>\r\n          <div>{user.total_photos} photos</div>\r\n          <div>{user.total_likes} likes</div>\r\n        </UserInfoRow>\r\n        <UserInfoRow>\r\n          <FullName>{user.name}</FullName>\r\n        </UserInfoRow>\r\n      </UserInfoContainer>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport UserInfo from '../../components/UserInfo';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport styled, { css } from 'styled-components';\r\nimport Photo from '../../components/Photo';\r\nimport { unsplash } from '../../unsplash';\r\nimport { LayoutContext } from '../../App';\r\nimport SelectView from '../../components/SelectView';\r\nimport GoToTop from '../../components/GoToTop';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Results = styled.div`\r\n  padding: 20px;\r\n  width: 100%;\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\n  cursor: pointer;\r\n\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 250px;\r\n      height: 250px;\r\n      padding: 0;\r\n      padding: 0 20px 40px 20px;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 50%;\r\n      padding-bottom: 75px;\r\n    `}\r\n`;\r\n\r\nconst TitleBar = styled.h1`\r\n  text-align: center;\r\n  font-size: 48px;\r\n  margin: 20px;\r\n`;\r\nconst Loader = styled.div``;\r\n\r\nconst UserPage = (props) => {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const getData = () => {\r\n    unsplash.users\r\n      .photos(props.match.params.userName, page, 5, 'popular', false)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        setPhotos([...photos, ...json]);\r\n        setPage(page + 1);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []); // empty array for componentDidMount,\r\n  // put value in array for componentDidUpdate\r\n  const user = photos.length ? photos[0].user : null;\r\n  console.log(user);\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {(value) => {\r\n        return (\r\n          <Container>\r\n            <GoToTop />\r\n            <UserInfo user={user} />\r\n            <SelectView value={value}></SelectView>\r\n            <TitleBar>{props.match.params.userName}'s Photos:</TitleBar>\r\n            <InfiniteScroll\r\n              id='infinite-scroll'\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading ...</Loader>}>\r\n              <Results\r\n                id='landing-results'\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}>\r\n                {photos.map((photo) => {\r\n                  const { height, width } = photo;\r\n                  return (\r\n                    <PhotoContainer\r\n                      id='photo-container'\r\n                      key={photo.id}\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}>\r\n                      <Photo\r\n                        category='user'\r\n                        landscape={width > height}\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        id='photo'\r\n                        key={photo.id}\r\n                        photo={photo}\r\n                      />\r\n                    </PhotoContainer>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LayoutContext } from '../../../App';\r\nimport { Link } from 'react-router-dom';\r\nimport { toJson } from 'unsplash-js';\r\nimport styled, { css } from 'styled-components';\r\nimport { unsplash } from '../../../unsplash';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport GoToTop from '../../../components/GoToTop';\r\nimport SelectView from '../../../components/SelectView';\r\nimport { Heading } from '../../../components/ui/styles';\r\nconst Loader = styled.div``;\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst User = styled.div`\r\n  margin: 15px 45px 15px 45px;\r\n\r\n  cursor: pointer;\r\n\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      width: 250px;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      width: 50%;\r\n      flex: 1;\r\n    `}\r\n`;\r\n\r\nconst LinkTitle = styled.div`\r\n  padding: 0 0 10px 0;\r\n  font-size: 20px;\r\n  color: rgb(247, 154, 120);\r\n  text-align: left;\r\n`;\r\nconst Img = styled.img`\r\n  ${(props) =>\r\n    props.landscape\r\n      ? css`\r\n          width: 80vw;\r\n        `\r\n      : css`\r\n          height: 80vh;\r\n        `}\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  background: url(${(props) => props.src}) no-repeat center center;\r\n  background-size: cover;\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      width: 225px;\r\n      height: 225px;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      width: 350px;\r\n      height: 350px;\r\n    `}\r\n`;\r\n\r\nconst linkStyle = {\r\n  textDecoration: 'none',\r\n  fontSize: '24px',\r\n  padding: '10px',\r\n};\r\n\r\nconst SearchTerm = styled.span`\r\n  color: rgb(255, 0, 0);\r\n  font-size: 35px;\r\n`;\r\n\r\nconst HR = styled.hr`\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-style: inset;\r\n  border-width: 1px;\r\n  background-color: red;\r\n`;\r\n\r\nconst UserSearch = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const getData = () => {\r\n    if (!hasMore) return;\r\n    unsplash.search\r\n      .users(props.match.params.user, page, 5)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        setUsers([...users, ...json.results]);\r\n        setPage(page + 1);\r\n        if (!totalPages) setTotalPages(json.total_pages);\r\n        if (json.results === 0) setHasMore(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {(value) => {\r\n        return (\r\n          <Container id='user-search-container'>\r\n            <GoToTop />\r\n            <Heading>\r\n              Search results for{' '}\r\n              <SearchTerm> {props.match.params.user} </SearchTerm> in\r\n              <SearchTerm> Users</SearchTerm>:\r\n            </Heading>\r\n            <SelectView value={value}></SelectView>\r\n            <HR />\r\n            <InfiniteScroll\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading...</Loader>}>\r\n              <Results\r\n                id='user-search-results'\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}>\r\n                {users.map((user) => {\r\n                  const { height, width } = user.profile_image.large;\r\n                  return (\r\n                    <User id='user'>\r\n                      <Link\r\n                        category='user'\r\n                        id={user.id}\r\n                        to={`/user/${user.username}`}\r\n                        style={linkStyle}\r\n                        key={user.id}>\r\n                        <LinkTitle>{user.username}</LinkTitle>\r\n                        <Img\r\n                          isGrid={value.isGrid}\r\n                          isColumn={value.isColumn}\r\n                          src={user.profile_image.large}\r\n                          alt={user.username}\r\n                          key={user.id}\r\n                          landscape={width > height}\r\n                        />\r\n                      </Link>\r\n                    </User>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default UserSearch;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LayoutContext } from '../../../App';\r\nimport { Link } from 'react-router-dom';\r\nimport { toJson } from 'unsplash-js';\r\nimport { unsplash } from '../../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport GoToTop from '../../../components/GoToTop';\r\nimport SelectView from '../../../components/SelectView';\r\nimport { Heading } from '../../../components/ui/styles';\r\nconst Loader = styled.div``;\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst Collection = styled.div`\r\n  margin: 15px 50px 15px 50px;\r\n  cursor: pointer;\r\n\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      width: 250px;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      width: 50%;\r\n      flex: 1;\r\n    `}\r\n`;\r\n\r\nconst LinkTitle = styled.div`\r\n  padding: 0 0 10px 0;\r\n  font-size: 20px;\r\n  color: rgb(247, 154, 120);\r\n  text-align: left;\r\n`;\r\nconst Img = styled.div`\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  background: url(${props => props.src}) no-repeat center center;\r\n  background-size: cover;\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      width: 225px;\r\n      height: 225px;\r\n    `}\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      width: 500px;\r\n      height: 500px;\r\n    `}\r\n`;\r\n\r\nconst linkStyle = {\r\n  textDecoration: 'none',\r\n  fontSize: '24px',\r\n  padding: '10px'\r\n};\r\n\r\nconst SearchTerm = styled.span`\r\n  color: rgb(255, 0, 0);\r\n  font-size: 35px;\r\n`;\r\n\r\nconst HR = styled.hr`\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-style: inset;\r\n  border-width: 1px;\r\n  background-color: red;\r\n`;\r\n\r\nconst CollectionSearch = props => {\r\n  const [collections, setCollections] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const getData = () => {\r\n    if (!hasMore) return;\r\n    unsplash.search\r\n      .collections(props.match.params.collection, page, 5)\r\n      .then(toJson)\r\n      .then(json => {\r\n        setCollections([...collections, ...json.results]);\r\n        setPage(page + 1);\r\n        if (!totalPages) setTotalPages(json.total_pages);\r\n        if (json.results === 0) setHasMore(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {value => {\r\n        return (\r\n          <Container>\r\n            <GoToTop />\r\n            <Heading>\r\n              Search results for\r\n              <SearchTerm> {props.match.params.collection} </SearchTerm>in\r\n              <SearchTerm> Collections</SearchTerm>:\r\n            </Heading>\r\n            <SelectView value={value}></SelectView>\r\n            <HR />\r\n            <InfiniteScroll\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading ...</Loader>}>\r\n              <Results\r\n                id='collection-search-results'\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}>\r\n                {collections.map(collection => {\r\n                  return (\r\n                    <Collection id='collection' key={collection.id}>\r\n                      <Link\r\n                        category='collection'\r\n                        id={collection.id}\r\n                        to={`/collection/${collection.id}`}\r\n                        style={linkStyle}\r\n                        key={collection.id}>\r\n                        <LinkTitle>{collection.title}</LinkTitle>\r\n                        <Img\r\n                          isGrid={value.isGrid}\r\n                          isColumn={value.isColumn}\r\n                          src={collection.cover_photo.urls.small}\r\n                          alt={collection.title}\r\n                          key={collection.id}\r\n                        />\r\n                      </Link>\r\n                    </Collection>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default CollectionSearch;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Photo from '../../components/Photo';\r\nimport { unsplash } from '../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport UserLink from '../../components/UserLink';\r\nimport { LayoutContext } from '../../App';\r\nimport SelectView from '../../components/SelectView';\r\nimport GoToTop from '../../components/GoToTop';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Heading = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  padding: 20px 0 0 20px;\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  ${props =>\r\n    props.landscape\r\n      ? css`\r\n          width: 80vw;\r\n        `\r\n      : css`\r\n          height: 80vh;\r\n        `}\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      width: 250px;\r\n      height: 100%;\r\n      padding-left: 15px;\r\n      padding-right: 15px;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 50%;\r\n    `}\r\n`;\r\n\r\nconst Loader = styled.div``;\r\n\r\nconst Collection = props => {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getData = () => {\r\n    console.log(props);\r\n    unsplash.collections\r\n      .getCollectionPhotos(props.match.params.id, page, 10, 'popular')\r\n      .then(toJson)\r\n      .then(json => {\r\n        setPhotos([...photos, ...json]);\r\n        setPage(page + 1);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  if (photos.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {value => {\r\n        return (\r\n          <Container>\r\n            <GoToTop />\r\n            <Heading>\r\n              Collection:\r\n              <SelectView value={value}></SelectView>\r\n            </Heading>\r\n\r\n            <InfiniteScroll\r\n              id='infinite-scroll'\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading ...</Loader>}>\r\n              <Results\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}\r\n                id='landing-results'>\r\n                {photos.map(photo => {\r\n                  const { height, width } = photo;\r\n                  return (\r\n                    <PhotoContainer\r\n                      key={photo.id}\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}\r\n                      landscape={width > height}\r\n                      id='photo-container'>\r\n                      <UserLink\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        key={photo.user.id}\r\n                        id='userlink'\r\n                        photo={photo}\r\n                      />\r\n                      <Photo\r\n                        landscape={width > height}\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        id='photo'\r\n                        key={photo.id}\r\n                        photo={photo}\r\n                      />\r\n                    </PhotoContainer>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Photo from '../../../components/Photo';\r\nimport { unsplash } from '../../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport UserLink from '../../../components/UserLink';\r\nimport { LayoutContext } from '../../../App';\r\nimport SelectView from '../../../components/SelectView';\r\nimport GoToTop from '../../../components/GoToTop';\r\nimport { Heading } from '../../../components/ui/styles';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  margin-top: 25px;\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin: 50px 20px 20px 20px;\r\nalign-items: center;\r\ncursor: pointer;\r\n\r\n${props =>\r\n  props.landscape\r\n    ? css`\r\n        width: 80vw;\r\n      `\r\n    : css`\r\n        height: 80vh;\r\n      `}\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      width: 250px;\r\n      height: 100%;\r\n      padding-left: 15px;\r\n      padding-right: 15px;\r\n    `}\r\n${props =>\r\n  props.isColumn &&\r\n  css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    flex: 1;\r\n    width: 50%;\r\n  `}\r\n`;\r\n\r\nconst SearchTerm = styled.span`\r\n  color: rgb(255, 0, 0);\r\n  font-size: 35px;\r\n`;\r\n\r\nconst HR = styled.hr`\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-style: inset;\r\n  border-width: 1px;\r\n  background-color: red;\r\n`;\r\n\r\nconst Loader = styled.div``;\r\n\r\nconst PhotoSearch = props => {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const getData = () => {\r\n    if (!hasMore) return;\r\n    unsplash.search\r\n      .photos(props.match.params.searchTerm, page, 5, {\r\n        orientation: 'portrait'\r\n      })\r\n      .then(toJson)\r\n      .then(json => {\r\n        setPhotos([...photos, ...json.results]);\r\n        setPage(page + 1);\r\n        if (!totalPages) setTotalPages(json.total_pages);\r\n        if (json.results === 0) setHasMore(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {value => {\r\n        return (\r\n          <Container>\r\n            <GoToTop />\r\n            <Heading>\r\n              Search results for\r\n              <SearchTerm> {props.match.params.searchTerm} </SearchTerm> in\r\n              <SearchTerm> Photos: </SearchTerm>\r\n            </Heading>\r\n            <SelectView value={value}></SelectView>\r\n            <HR />\r\n            <InfiniteScroll\r\n              id='infinite-scroll'\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading ...</Loader>}>\r\n              <Results\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}\r\n                id='landing-results'>\r\n                {photos.map(photo => {\r\n                  const { height, width } = photo;\r\n\r\n                  return (\r\n                    <PhotoContainer\r\n                      key={photo.id}\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}\r\n                      landscape={width > height}\r\n                      id='photo-container'>\r\n                      <UserLink\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        key={photo.id}\r\n                        id='userlink'\r\n                        user={photo.user}\r\n                      />\r\n                      <Photo\r\n                        landscape={width > height}\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        id='photo'\r\n                        photo={photo}\r\n                        key={photo.id}\r\n                      />\r\n                    </PhotoContainer>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\nexport default PhotoSearch;\r\n","//getting an issue where the first search you do works, but if you type in a different search term,\r\n//it still displays the first search\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Photo from '../../components/Photo';\r\nimport { unsplash } from '../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport UserLink from '../../components/UserLink';\r\nimport { LayoutContext } from '../../App';\r\nimport SelectView from '../../components/SelectView';\r\nimport GoToTop from '../../components/GoToTop';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Heading = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  padding: 20px 0 0 20px;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\nposition: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  ${props =>\r\n    props.landscape\r\n      ? css`\r\n          width: 80vw;\r\n        `\r\n      : css`\r\n          height: 80vh;\r\n        `}\r\n    ${props =>\r\n      props.isGrid &&\r\n      css`\r\n        display: flex;\r\n        width: 250px;\r\n        height: 100%;\r\n        padding-left: 15px;\r\n        padding-right: 15px;\r\n      `}\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      flex: 1;\r\n      width: 50%;\r\n    `}\r\n`;\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 25px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: red;\r\n  background-color: rgb(250, 250, 250);\r\n  border-radius: 3px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Favorites = () => {\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  const getData = async () => {\r\n    let storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n\r\n    setFavorites(storedFavorites);\r\n  };\r\n\r\n  const removeFavorite = photoId => {\r\n    let nextFavorite = favorites.filter(favorite => {\r\n      console.log(photoId);\r\n      console.log(favorite.id);\r\n      return photoId !== favorite.id;\r\n    });\r\n    setFavorites(nextFavorite);\r\n\r\n    localStorage.setItem('favorites', JSON.stringify(nextFavorite));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {value => {\r\n        return !favorites.length ? (\r\n          'No favorites to show'\r\n        ) : (\r\n          <Container id='favorites-container'>\r\n            <GoToTop />\r\n            <Heading id='favorites-heading'>\r\n              Favorites:\r\n              <SelectView value={value}></SelectView>\r\n            </Heading>\r\n            <Results\r\n              isGrid={value.isGrid}\r\n              isColumn={value.isColumn}\r\n              id='landing-results'>\r\n              {favorites.map(photo => {\r\n                const { height, width } = photo;\r\n                return (\r\n                  <PhotoContainer\r\n                    key={photo.id}\r\n                    isGrid={value.isGrid}\r\n                    isColumn={value.isColumn}\r\n                    landscape={width > height}>\r\n                    <UserLink\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}\r\n                      key={photo.user.id}\r\n                      id='userlink'\r\n                      user={photo.user}\r\n                    />\r\n                    <Photo\r\n                      isFavoritePage={'true'}\r\n                      landscape={width > height}\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}\r\n                      id='photo'\r\n                      key={photo.id}\r\n                      photo={photo}\r\n                      photoToRemove={photo}\r\n                    />\r\n                    <Remove\r\n                      onClick={() => removeFavorite(photo.id)}\r\n                      data-tip='Remove from favorites'>\r\n                      x\r\n                    </Remove>\r\n                  </PhotoContainer>\r\n                );\r\n              })}\r\n            </Results>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\nexport default Favorites;\r\n","import React from 'react';\r\nimport HeaderComponent from './components/Header';\r\nimport LandingPage from './pages/Landing';\r\nimport UserPage from './pages/User';\r\nimport UserSearch from './pages/Search/UserSearch';\r\nimport CollectionsSearch from './pages/Search/CollectionsSearch';\r\nimport Collection from './pages/Collection';\r\nimport PhotosSearch from './pages/Search/PhotosSearch';\r\nimport Favorites from './pages/Favorites';\r\nimport GoToTop from './components/GoToTop';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport './reset.css';\r\n\r\nconst FourOhFour = () => <div>Not Found</div>;\r\n\r\nexport const LayoutContext = React.createContext();\r\n\r\nclass App extends React.Component {\r\n\t//state for grid/list/column view\r\n\tstate = {\r\n\t\tisGrid: true,\r\n\t\tisList: false,\r\n\t\tisColumn: false\r\n\t};\r\n\r\n\ttoggleView = (e) => {\r\n\t\t//get current values from state and copy it\r\n\t\tconst currentValues = { ...this.state }; //spread the state object\r\n\t\t//set all copied state values to false\r\n\t\tObject.keys(currentValues).forEach((prop) => {\r\n\t\t\tcurrentValues[prop] = false;\r\n\t\t});\r\n\t\tconst gridSettings = {\r\n\t\t\t//paste copy back into state & update the current target.value\r\n\t\t\t...currentValues, //spread the object\r\n\t\t\t[e.target.name]: true\r\n\t\t};\r\n\t\tthis.setState(gridSettings);\r\n\r\n\t\tlocalStorage.setItem('gridSettings', JSON.stringify(gridSettings));\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst gridSettings = localStorage.getItem('gridSettings');\r\n\t\tif (gridSettings) this.setState(JSON.parse(gridSettings));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<LayoutContext.Provider\r\n\t\t\t\tvalue={{\r\n\t\t\t\t\tisGrid: this.state.isGrid,\r\n\t\t\t\t\tisList: this.state.isList,\r\n\t\t\t\t\tisColumn: this.state.isColumn,\r\n\t\t\t\t\ttoggleView: this.toggleView\r\n\t\t\t\t}}>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div className='app-container'>\r\n\t\t\t\t\t\t<GoToTop />\r\n\t\t\t\t\t\t<HeaderComponent />\r\n\t\t\t\t\t\t<div className='routes-container'>\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Route path='/' exact component={LandingPage} />\r\n\t\t\t\t\t\t\t\t<Route path='/user/:userName' exact component={UserPage} />\r\n\t\t\t\t\t\t\t\t<Route path='/search/users/:user' exact component={UserSearch} />\r\n\t\t\t\t\t\t\t\t<Route path='/search/collections/:collection' exact component={CollectionsSearch} />\r\n\t\t\t\t\t\t\t\t<Route path='/collection/:id' exact component={Collection} />\r\n\t\t\t\t\t\t\t\t<Route path='/search/photos/:searchTerm' exact component={PhotosSearch} />\r\n\t\t\t\t\t\t\t\t<Route path='/favorites' exact component={Favorites} />\r\n\t\t\t\t\t\t\t\t<Route path='*' component={FourOhFour} />\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\t\t\t</LayoutContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}