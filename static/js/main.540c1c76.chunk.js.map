{"version":3,"sources":["assets/logo.png","assets/magnifying-glass.png","components/Logo/index.jsx","components/SearchBar/index.jsx","components/Header/index.jsx","components/Modal/index.jsx","components/Photo/index.jsx","unsplash.js","components/UserLink/index.jsx","components/SelectView/index.jsx","components/GoToTop/index.jsx","components/ui/styles.js","pages/Landing/index.jsx","components/UserInfo/index.jsx","pages/User/index.jsx","pages/Search/UserSearch/index.jsx","pages/Search/CollectionsSearch/index.jsx","pages/Collection/index.jsx","pages/Search/PhotosSearch/index.jsx","pages/Favorites/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Img","img","H2","h2","Logo","style","textDecoration","to","src","logo","React","Component","Form","form","TextField","input","Button","button","Wrapper","Radios","Radio","Label","label","InputRadio","withRouter","props","useState","searchTerm","setSearchTerm","category","setCategory","handleCategoryChange","e","target","value","toLowerCase","console","log","checked","onSubmit","history","push","document","getElementById","id","onChange","type","name","required","htmlFor","placeholder","MagnifyingGlassIcon","alt","Nav","ButtonContainer","Header","handleClick","preventDefault","state","onClick","this","ModalImage","landscape","css","Close","span","Modal","show","photo","onClose","ColumnPhoto","GridPhoto","FavIcon","hide","AddMsg","showAdd","hidePhoto","Photo","favorite","exists","msg","isFavoritePage","toggleModal","setState","addFavorite","storedFavorites","JSON","parse","localStorage","getItem","filter","length","setItem","stringify","setTimeout","isGrid","urls","small","regular","alt_description","match","path","data-tip","place","effect","backgroundColor","textColor","full","unsplash","Unsplash","accessKey","LinkContainer","StyledLink","Link","pStyle","paddingLeft","UserLink","user","username","profile_image","RadioGroup","ul","SelectView","LayoutContext","Consumer","className","toggleView","isColumn","showButton","TopHat","GoToTop","toTop","body","scrollTop","documentElement","window","onscroll","Heading","h1","alignItems","Results","PhotoContainer","HR1","Loader","hr","Landing","photos","setPhotos","page","setPage","getData","a","listPhotos","then","toJson","json","useEffect","pageStart","loadMore","hasMore","loader","key","map","height","width","UserInfoContainer","UserInfoRow","Username","FullName","UserInfo","large","total_collections","total_photos","total_likes","color","TitleBar","UserPage","users","params","userName","User","LinkTitle","linkStyle","fontSize","padding","SearchTerm","HR","UserSearch","setUsers","setHasMore","totalPages","setTotalPages","search","results","total_pages","overflow","Collection","CollectionSearch","collections","setCollections","collection","title","cover_photo","getCollectionPhotos","PhotoSearch","orientation","Remove","EmptyMessage","Favorites","favorites","setFavorites","photoToRemove","photoId","nextFavorite","removeFavorite","Footer","FourOhFour","createContext","App","isList","currentValues","Object","keys","forEach","prop","gridSettings","Provider","exact","component","LandingPage","CollectionsSearch","PhotosSearch","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.540c1c76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.de6873fc.png\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.cb625baf.png\";","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport logo from '../../assets/logo.png';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 33%;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 30px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  position: relative;\r\n  font-family: 'Dancing Script', cursive;\r\n  color: var(--secondary-color);\r\n  font-size: 50px;\r\n  padding-left: 17px;\r\n  &::before {\r\n    position: absolute;\r\n    content: '';\r\n    background-color: black;\r\n    width: 1px;\r\n    height: 1em;\r\n\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nclass Logo extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Link style={{ textDecoration: 'none' }} to='/'>\r\n          <Img src={logo} />\r\n        </Link>\r\n\r\n        <Link style={{ textDecoration: 'none' }} to='/'>\r\n          <H2>Photogram</H2>\r\n        </Link>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport MagnifyingGlassIcon from '../../assets/magnifying-glass.png';\r\nimport styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n`;\r\n\r\nconst TextField = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  min-height: 30px;\r\n  padding-left: 10px;\r\n  border-radius: 3px 0 0 3px;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  min-height: 32px;\r\n  align-items: center;\r\n  padding: 0 10px 0 10px;\r\n  background-color: rgb(250, 250, 250);\r\n  border-radius: 0 3px 3px 0;\r\n  outline: none;\r\n  border: none;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n  &:active img {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  max-width: 15px;\r\n`;\r\n\r\nconst Radios = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Radio = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding-bottom: 15px;\r\n`;\r\nconst Label = styled.label`\r\n  color: var(--secondary-color);\r\n  padding: 0 10px;\r\n  font-size: 18px;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n  :after {\r\n    width: 17px;\r\n    height: 17px;\r\n    border-radius: 15px;\r\n    top: -2px;\r\n    left: -1px;\r\n    position: relative;\r\n    background-color: #d1d3d1;\r\n    content: '';\r\n    display: inline-block;\r\n    visibility: visible;\r\n  }\r\n  &:checked:after {\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 15px;\r\n    top: -2px;\r\n    left: -1px;\r\n    position: relative;\r\n    background-color: var(--fourth-color);\r\n    content: '';\r\n    display: inline-block;\r\n    visibility: visible;\r\n    border: 1px solid white;\r\n  }\r\n`;\r\n\r\nconst SearchBar = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value.toLowerCase());\r\n  };\r\n  const handleCategoryChange = (e) => {\r\n    if (e) {\r\n      setCategory(e.target.value.toLowerCase());\r\n      console.log((e.target.checked = true));\r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    console.log('test');\r\n    if (searchTerm && category) {\r\n      props.history.push(`/search/${category}/${searchTerm}`);\r\n    }\r\n    document.getElementById('search-input').value = '';\r\n  };\r\n  //can't get it to select the same category with a different search term\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} id='form1'>\r\n      <Radios>\r\n        <Radio>\r\n          <InputRadio\r\n            onChange={handleCategoryChange}\r\n            type='radio'\r\n            id='users'\r\n            name='category'\r\n            value='users'\r\n            required\r\n          />\r\n          <Label htmlFor='users'>Users</Label>\r\n        </Radio>\r\n        <Radio>\r\n          <InputRadio\r\n            onChange={handleCategoryChange}\r\n            type='radio'\r\n            id='collections'\r\n            name='category'\r\n            value='collections'\r\n          />\r\n          <Label htmlFor='collections'>Collections</Label>\r\n        </Radio>\r\n        <Radio>\r\n          <InputRadio\r\n            onChange={handleCategoryChange}\r\n            type='radio'\r\n            id='photos'\r\n            name='category'\r\n            value='photos'\r\n          />\r\n          <Label htmlFor='photos'>Photos</Label>\r\n        </Radio>\r\n      </Radios>\r\n\r\n      {/*<Dropdown id='dropdown' handleCategoryChange={handleCategoryChange} /> */}\r\n\r\n      {/* <select id='select-box' required onChange={this.handleCategoryChange}>\r\n          <option value='' default selected disabled hidden>\r\n            Category\r\n          </option>\r\n          <option value='User'>Users</option>\r\n          <option value='Collections'>Collections</option>\r\n          <option value='Photos'>Photos</option>\r\n        </select>\r\n    */}\r\n      <Wrapper>\r\n        <TextField\r\n          id='search-input'\r\n          required\r\n          onChange={handleSearchChange}\r\n          type='text'\r\n          placeholder='Search'\r\n        />\r\n\r\n        <Button type='submit' form='form1'>\r\n          <Img src={MagnifyingGlassIcon} alt='magnifying-glass' />\r\n        </Button>\r\n      </Wrapper>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withRouter(SearchBar);\r\n","import React from 'react';\r\nimport Logo from '../Logo/index.jsx';\r\nimport SearchBar from '../SearchBar';\r\nimport styled from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Nav = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 90px;\r\n  background-color: var(--main-color);\r\n  color: var(--fourth-color);\r\n  z-index: 4;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  width: 33%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Button = styled.button`\r\n  color: var(--main-color);\r\n  background-color: var(--secondary-color);\r\n  font-size: 16px;\r\n  width: auto;\r\n  padding: 5px 20px 5px 20px;\r\n  margin-left: 100px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n  &:active {\r\n    transform: scale(0.999);\r\n  }\r\n`;\r\n\r\nclass Header extends React.Component {\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push(`/favorites`);\r\n  };\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <Nav>\r\n        <Logo />\r\n        <SearchBar />\r\n        <ButtonContainer>\r\n          <Button onClick={this.handleClick}>Favorites</Button>\r\n        </ButtonContainer>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  border: solid black 1px;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 11;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  transition: 0.3s;\r\n  text-align: center;\r\n  \r\n`;\r\n\r\nconst ModalImage = styled.div`\r\n  \r\n  position: relative;\r\n  margin: 0 auto;\r\n  width: auto;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n\r\n`;\r\n\r\nconst Img = styled.img`\r\n  ${props =>\r\n    props.landscape\r\n      ? css`\r\n          width: 100%;\r\n        `\r\n      : css`\r\n          height: 100%;\r\n        `} /* Set rules to fill background */\r\n\r\n\r\n  /* Set up proportionate scaling */\r\n\r\n  /* Set up positioning */\r\n  transition: all 2s;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nconst Close = styled.span`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  padding: 20px;\r\n  -webkit-text-fill-color: white;\r\n  -webkit-text-stroke-width: 1px;\r\n  -webkit-text-stroke-color: black;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  z-index: 10;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst Modal = props => {\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Container id='container'>\r\n      <ModalImage id='modal-image'>\r\n        <Img\r\n          src={props.photo}\r\n          alt='nada'\r\n          onClick={props.onClose}\r\n          landscape={props.landscape}></Img>\r\n        <Close onClick={props.onClose}>&times;</Close>\r\n      </ModalImage>\r\n    </Container>\r\n  );\r\n};\r\n\r\n/*<Img\r\nlandscape={props.landscape}\r\nsrc={props.photo}\r\nalt='nada'\r\nonClick={props.onClose}\r\n/>*/\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\nimport Modal from '../Modal';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ColumnPhoto = styled.img`\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  background-size: cover;\r\n  background: url(${(props) => props.src}) no-repeat center center;\r\n\r\n  ${(props) =>\r\n    props.landscape\r\n      ? css`\r\n          width: 100%;\r\n        `\r\n      : css`\r\n          height: 100%;\r\n        `}\r\n`;\r\n\r\nconst GridPhoto = styled.img`\r\n  transition: all 5s;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n  width: 100%;\r\n  height: 200px;\r\n  background: url(${(props) => props.src}) no-repeat center center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst FavIcon = styled.div`\r\n  color: red;\r\n  position: absolute;\r\n  font-size: 24px;\r\n  top: 10px;\r\n  left: 10px;\r\n  -webkit-text-stroke: 2px red;\r\n  -webkit-text-fill-color: transparent;\r\n  &:active {\r\n    transform: scale(0.9);\r\n    -webkit-text-fill-color: red;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  ${(props) =>\r\n    props.hide &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nconst AddMsg = styled.div`\r\n  position: absolute;\r\n  top: -75px;\r\n  left: 0px;\r\n  right: 0px;\r\n  width: 100%;\r\n  text-align: center;\r\n  transition: all 0.2s ease-in-out;\r\n  background-color: rgb(247, 154, 120);\r\n  padding: 5px;\r\n  border-radius: 3px;\r\n\r\n  ${(props) =>\r\n    props.showAdd\r\n      ? css`\r\n          opacity: 1;\r\n        `\r\n      : css`\r\n          opacity: 0;\r\n        `}\r\n`;\r\n\r\nconst hidePhoto = {\r\n  '/favorites': true,\r\n  '/random': true,\r\n};\r\n\r\nclass Photo extends Component {\r\n  state = {\r\n    show: false,\r\n    favorite: false,\r\n    exists: false,\r\n    showAdd: false,\r\n    msg: '',\r\n    isFavoritePage: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n\r\n  addFavorite = () => {\r\n    let storedFavorites = JSON.parse(localStorage.getItem('favorites'));\r\n\r\n    if (!storedFavorites) {\r\n      storedFavorites = [];\r\n    }\r\n\r\n    var tmpArr = storedFavorites.filter((photo) => {\r\n      return this.props.photo.id === photo.id;\r\n    });\r\n\r\n    if (tmpArr.length) {\r\n      this.setState({ msg: 'That photo is already in your favorites.' });\r\n      this.setState({ exists: true });\r\n    } else {\r\n      this.setState({ exists: false });\r\n      storedFavorites.push(this.props.photo);\r\n      localStorage.setItem('favorites', JSON.stringify(storedFavorites));\r\n      this.setState({ favorite: true });\r\n      this.setState({ msg: 'Photo added to favorites.' });\r\n    }\r\n    this.setState({ showAdd: true });\r\n    setTimeout(() => {\r\n      this.setState({ showAdd: false });\r\n    }, 1500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container id='photo-container'>\r\n        {this.props.isGrid ? (\r\n          <GridPhoto\r\n            landscape={this.props.landscape}\r\n            src={this.props.photo.urls.small}\r\n            onClick={this.toggleModal}\r\n          />\r\n        ) : (\r\n          <ColumnPhoto\r\n            landscape={this.props.landscape}\r\n            id='column-photo-img'\r\n            onClick={this.toggleModal}\r\n            src={this.props.photo.urls.regular}\r\n            alt={this.props.photo.alt_description}\r\n          />\r\n        )}\r\n        <FavIcon\r\n          hide={hidePhoto[this.props.match.path]}\r\n          data-tip='Add to favorites'\r\n          onClick={this.addFavorite}>\r\n          &hearts;\r\n        </FavIcon>\r\n        <ReactTooltip\r\n          type='info'\r\n          place='top'\r\n          effect='solid'\r\n          backgroundColor='var(--secondary-color)'\r\n          textColor='var(--main-color)'\r\n        />\r\n        <Modal\r\n          id='modal'\r\n          onClose={this.toggleModal}\r\n          show={this.state.show}\r\n          photo={this.props.photo.urls.full}\r\n        />\r\n        <AddMsg showAdd={this.state.showAdd}>{this.state.msg}</AddMsg>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Photo);\r\n","import Unsplash from 'unsplash-js';\r\nexport const unsplash = new Unsplash({\r\n\taccessKey: '2c3e172d585783910133a3b7c26b7c24a7dde925f6da708538cddf8081a4b009'\r\n});\r\n\r\n// d05fe364f186af88c5fc71e646845374ca9d2a99aaf8c8ef9e4cc1c058e6bae5\r\n\r\n// deeaf0db05cb33f1ce444c03c075d393261f1f5789c4cb94cdeeef9b1e020fa4\r\n\r\n// f60e5cafcb3b8080fd0df608e7a86a7fc207ebb0fbba65f2e14ac75d130babc0\r\n\r\n//2c3e172d585783910133a3b7c26b7c24a7dde925f6da708538cddf8081a4b009\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst LinkContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: var(--third-color);\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 5px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst pStyle = {\r\n  paddingLeft: '10px',\r\n};\r\n\r\nclass UserLink extends Component {\r\n  render() {\r\n    return (\r\n      <LinkContainer id='userlink-container'>\r\n        <StyledLink id='userlink-link' to={`/user/${this.props.user.username}`}>\r\n          <Img\r\n            id='userlink-image'\r\n            alt={this.props.user.name}\r\n            src={this.props.user.profile_image.small}\r\n          />\r\n          <p style={pStyle}>{this.props.user.name}</p>\r\n        </StyledLink>\r\n      </LinkContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserLink;\r\n","//need to create select view functionality and styling\r\n\r\nimport React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { LayoutContext } from '../../App';\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  margin-left: 155px;\r\n  font-size: 16px;\r\n  align-items: center;\r\n  padding: 10px 0 15px 0;\r\n\r\n  margin-bottom: 20px;\r\n  background-color: rgb(250, 250, 250);\r\n  & h3 {\r\n    width: 100%;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst RadioGroup = styled.ul`\r\n  width: 100%;\r\n  list-style-type: none;\r\n  margin: 10px 0 0 0;\r\n  padding: 0;\r\n  display: flex;\r\n  & li {\r\n    margin: 0 0 0 0;\r\n    width: 85px;\r\n    height: 35px;\r\n    position: relative;\r\n  \r\n  }\r\n  & label,\r\n  & input {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    border-radius: 3px;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    &[type='radio'] {\r\n      visibility: hidden;\r\n      z-index: 100;\r\n      &:checked + label {\r\n        background: var(--secondary-color);\r\n        color: var(lightslateblue)\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport class SelectView extends Component {\r\n  render() {\r\n    return (\r\n      <LayoutContext.Consumer>\r\n        {(value) => {\r\n          return (\r\n            <ButtonContainer id='select-view-container'>\r\n              <h3>View:</h3>\r\n\r\n              <RadioGroup className='selectButtons'>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    id='grid'\r\n                    onChange={value.toggleView}\r\n                    name='isGrid'\r\n                    checked={value.isGrid ? true : false}\r\n                  />\r\n                  <label htmlFor='grid'>Grid</label>\r\n                </li>\r\n\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    id='column'\r\n                    onChange={value.toggleView}\r\n                    name='isColumn'\r\n                    checked={value.isColumn ? true : false}\r\n                  />\r\n                  <label htmlFor='column'>Column</label>\r\n                </li>\r\n              </RadioGroup>\r\n            </ButtonContainer>\r\n          );\r\n        }}\r\n      </LayoutContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectView;\r\n","import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { LayoutContext } from '../../App';\r\n\r\nconst Container = styled.div`\r\n  background: var(--secondary-color);\r\n  ${(props) =>\r\n    props.showButton\r\n      ? css`\r\n          display: flex;\r\n        `\r\n      : css`\r\n          display: none;\r\n        `}\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  right: 55px;\r\n  top: 125px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n  transition: 0.2s;\r\n`;\r\n\r\nconst TopHat = styled.span`\r\n  -webkit-text-fill-color: var(--first-color);\r\n  font-size: 36px;\r\n  top: 5px;\r\n  left: 7px;\r\n  position: absolute;\r\n  z-index: 2;\r\n  font-weight: bold;\r\n`;\r\n\r\nclass GoToTop extends Component {\r\n  state = {\r\n    showButton: false,\r\n  };\r\n\r\n  // trying to get the arrow to appear/disappear when it is at the top of the page\r\n  componentDidMount() {\r\n    window.onscroll = () => {\r\n      if (\r\n        document.body.scrollTop > 20 ||\r\n        document.documentElement.scrollTop > 20\r\n      ) {\r\n        this.setState({ showButton: true });\r\n      } else {\r\n        this.setState({ showButton: false });\r\n      }\r\n    };\r\n  }\r\n\r\n  toTop = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <LayoutContext.Consumer>\r\n        {(value) => {\r\n          return (\r\n            <Container\r\n              id='goToTop'\r\n              onClick={this.toTop}\r\n              showButton={this.state.showButton}>\r\n              <TopHat>&#94;</TopHat>\r\n            </Container>\r\n          );\r\n        }}\r\n      </LayoutContext.Consumer>\r\n    );\r\n  }\r\n  f;\r\n}\r\n\r\nexport default GoToTop;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Heading = styled.h1`\r\n  font-size: 32px;\r\n  font-weight: 800;\r\n  margin: 15px 0 15px 0;\r\n  padding-left: 155px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  ${props =>\r\n    props.alignItems &&\r\n    css`\r\n      align-items: ${props.alignItems};\r\n    `}\r\n`;\r\n","//getting an issue where the first search you do works, but if you type in a different search term,\r\n//it still displays the first search\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Photo from '../../components/Photo';\r\nimport { unsplash } from '../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport UserLink from '../../components/UserLink';\r\nimport { LayoutContext } from '../../App';\r\nimport SelectView from '../../components/SelectView';\r\nimport GoToTop from '../../components/GoToTop';\r\nimport { Heading } from '../../components/ui/styles';\r\n\r\nconst Container = styled.div`\r\n\tmargin: 0 auto;\r\n\tbackground-color: rgb(250, 250, 250);\r\n\t\r\n`;\r\n\r\nconst Results = styled.div`\r\n\twidth: 100%;\r\n\t${(props) =>\r\n\t\tprops.isGrid &&\r\n\t\tcss`\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tjustify-content: center;\r\n\t\t`} \r\n\t${(props) =>\r\n\t\t\tprops.isColumn &&\r\n\t\t\tcss`\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\talign-items: center;\r\n\t\t\t`};\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin: 50px 20px 20px 20px;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n\r\n\t${(props) => (\r\n\t\tprops.landscape ? \r\n\t\tcss`\r\n\t\t\twidth: 80vw;` : css`height: 80vh;`\r\n\t)} \r\n\t${(props) =>\r\n\t\t\tprops.isGrid &&\r\n\t\t\tcss`\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\twidth: 250px;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\tpadding-left: 15px;\r\n\t\t\t\tpadding-right: 15px;\r\n\t\t\t`} \r\n\t\t\t${(props) => \r\n\t\t\t\tprops.isColumn &&\r\n\t\t\t\tcss`\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t\tflex: 1;\r\n\t\t\t\t\twidth: 50%;\r\n\t\t\t`};\r\n`;\r\n\r\nconst HR1 = styled.div`\r\ncontent: \" \";\t\r\nwidth: 100%;\r\nheight: 1px;\r\nbackground-color: var(--main-color);\r\n`;\r\n\r\nconst HR = styled.hr`\r\n\tdisplay: block;\r\n\tmargin-top: 0.5em;\r\n\tmargin-bottom: 0.5em;\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n\tborder-style: inset;\r\n\tborder-width: 1px;\r\n\tbackground-color: red;\r\n`;\r\n\r\nconst Loader = styled.div``;\r\n\r\nconst Landing = () => {\r\n\tconst [ photos, setPhotos ] = useState([]);\r\n\tconst [ page, setPage ] = useState(1);\r\n\r\n\tconst getData = async () => {\r\n\t\tawait unsplash.photos.listPhotos(page, 25, 'latest').then(toJson).then((json) => {\r\n\t\t\tsetPhotos([ ...photos, ...json ]);\r\n\t\t\tsetPage(page + 1);\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetData();\r\n\t}, []);\r\n\r\n\tif (photos.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<LayoutContext.Consumer>\r\n\t\t\t{(value) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Container id='landing-container'>\r\n\t\t\t\t\t\t<GoToTop />\r\n\t\t\t\t\t\t<Heading id='landing-heading'>Latest Photos:</Heading>\r\n\t\t\t\t\t\t<SelectView value={value} />\r\n\t\t\t\t\t\t<HR1 />\r\n\t\t\t\t\t\t<InfiniteScroll\r\n\t\t\t\t\t\t\tid='infinite-scroll'\r\n\t\t\t\t\t\t\tpageStart={1}\r\n\t\t\t\t\t\t\tloadMore={getData}\r\n\t\t\t\t\t\t\thasMore\r\n\t\t\t\t\t\t\tloader={<Loader key={0}>Loading ...</Loader>}>\r\n\t\t\t\t\t\t\t<Results isGrid={value.isGrid} isColumn={value.isColumn} id='landing-results'>\r\n\t\t\t\t\t\t\t\t{photos.map((photo) => {\r\n\t\t\t\t\t\t\t\t\tconst { height, width } = photo;\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<PhotoContainer\r\n\t\t\t\t\t\t\t\t\t\t\tkey={photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\tisGrid={value.isGrid}\r\n\t\t\t\t\t\t\t\t\t\t\tisColumn={value.isColumn}\r\n\t\t\t\t\t\t\t\t\t\t\tlandscape={width > height}\r\n\t\t\t\t\t\t\t\t\t\t\tid='result-container'>\r\n\t\t\t\t\t\t\t\t\t\t\t<UserLink\r\n\t\t\t\t\t\t\t\t\t\t\t\tisGrid={value.isGrid}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisColumn={value.isColumn}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={photo.user.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tid='userlink'\r\n\t\t\t\t\t\t\t\t\t\t\t\tuser={photo.user}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Photo\r\n\t\t\t\t\t\t\t\t\t\t\t\tlandscape={width > height}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisGrid={value.isGrid}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisColumn={value.isColumn}\r\n\t\t\t\t\t\t\t\t\t\t\t\tid='photo'\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tphoto={photo}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</PhotoContainer>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Results>\r\n\t\t\t\t\t\t</InfiniteScroll>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t</LayoutContext.Consumer>\r\n\t);\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  width: 50%;\r\n  padding: 20px;\r\n  align-items: center;\r\n  border-bottom: solid lightgrey;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 150px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst UserInfoContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst UserInfoRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: auto;\r\n  padding: 12px 0px 12px 40px;\r\n  box-sizing: content-box;\r\n  color: var(--third-color);\r\n`;\r\n\r\nconst Username = styled.div`\r\n  font-size: 28px;\r\n  font-weight: 200;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-weight: bold;\r\n  font-size: 1.2em;\r\n  color: var(--main-color);\r\n`;\r\n\r\nexport default function UserInfo({ user }) {\r\n  if (!user) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Container>\r\n      <Img src={user.profile_image.large} alt={user.username} />\r\n\r\n      <UserInfoContainer>\r\n        <UserInfoRow>\r\n          <Username>User: {user.username}</Username>\r\n        </UserInfoRow>\r\n        <UserInfoRow>\r\n          <div>{user.total_collections} collections</div>\r\n          <div>{user.total_photos} photos</div>\r\n          <div>{user.total_likes} likes</div>\r\n        </UserInfoRow>\r\n        <UserInfoRow>\r\n          <FullName>\r\n            Full Name:\r\n            <span style={{ color: 'var(--secondary-color)' }}>\r\n              {' '}\r\n              {user.name}\r\n            </span>\r\n          </FullName>\r\n        </UserInfoRow>\r\n      </UserInfoContainer>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport UserInfo from '../../components/UserInfo';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport styled, { css } from 'styled-components';\r\nimport Photo from '../../components/Photo';\r\nimport { unsplash } from '../../unsplash';\r\nimport { LayoutContext } from '../../App';\r\nimport SelectView from '../../components/SelectView';\r\nimport GoToTop from '../../components/GoToTop';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Results = styled.div`\r\n  padding: 20px;\r\n  width: 100%;\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\n  cursor: pointer;\r\n\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 250px;\r\n      height: 250px;\r\n      padding: 0;\r\n      padding: 0 20px 40px 20px;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 50%;\r\n      padding-bottom: 75px;\r\n    `}\r\n`;\r\n\r\nconst TitleBar = styled.h1`\r\n  text-align: center;\r\n  font-size: 48px;\r\n  margin: 20px;\r\n`;\r\nconst Loader = styled.div``;\r\n\r\nconst UserPage = (props) => {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const getData = () => {\r\n    unsplash.users\r\n      .photos(props.match.params.userName, page, 5, 'popular', false)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        setPhotos([...photos, ...json]);\r\n        setPage(page + 1);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []); // empty array for componentDidMount,\r\n  // put value in array for componentDidUpdate\r\n  const user = photos.length ? photos[0].user : null;\r\n  console.log(user);\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {(value) => {\r\n        return (\r\n          <Container>\r\n            <GoToTop />\r\n            <UserInfo user={user} />\r\n            <SelectView value={value}></SelectView>\r\n            <TitleBar>\r\n              <span style={{ color: 'var(--secondary-color)' }}>\r\n                {props.match.params.userName}'s\r\n              </span>{' '}\r\n              Photos:\r\n            </TitleBar>\r\n            <InfiniteScroll\r\n              id='infinite-scroll'\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading ...</Loader>}>\r\n              <Results\r\n                id='landing-results'\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}>\r\n                {photos.map((photo) => {\r\n                  const { height, width } = photo;\r\n                  return (\r\n                    <PhotoContainer\r\n                      id='photo-container'\r\n                      key={photo.id}\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}>\r\n                      <Photo\r\n                        category='user'\r\n                        landscape={width > height}\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        id='photo'\r\n                        key={photo.id}\r\n                        photo={photo}\r\n                      />\r\n                    </PhotoContainer>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LayoutContext } from '../../../App';\r\nimport { Link } from 'react-router-dom';\r\nimport { toJson } from 'unsplash-js';\r\nimport styled, { css } from 'styled-components';\r\nimport { unsplash } from '../../../unsplash';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport GoToTop from '../../../components/GoToTop';\r\nimport SelectView from '../../../components/SelectView';\r\nimport { Heading } from '../../../components/ui/styles';\r\nconst Loader = styled.div``;\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst User = styled.div`\r\n  margin: 15px 45px 15px 45px;\r\n\r\n  cursor: pointer;\r\n\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      width: 250px;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      width: 50%;\r\n      flex: 1;\r\n    `}\r\n`;\r\n\r\nconst LinkTitle = styled.div`\r\n  padding: 0 0 10px 0;\r\n  font-size: 20px;\r\n  color: var(--third-color);\r\n  text-align: left;\r\n`;\r\nconst Img = styled.img`\r\n  ${(props) =>\r\n    props.landscape\r\n      ? css`\r\n          width: 80vw;\r\n        `\r\n      : css`\r\n          height: 80vh;\r\n        `}\r\n  transition: all 10s;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n  background: url(${(props) => props.src}) no-repeat center center;\r\n  background-size: cover;\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      width: 225px;\r\n      height: 225px;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      width: 350px;\r\n      height: 350px;\r\n    `}\r\n`;\r\n\r\nconst linkStyle = {\r\n  textDecoration: 'none',\r\n  fontSize: '24px',\r\n  padding: '10px',\r\n};\r\n\r\nconst SearchTerm = styled.span`\r\n  color: var(--third-color);\r\n  font-size: 35px;\r\n`;\r\n\r\nconst HR = styled.hr`\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-style: inset;\r\n  border-width: 1px;\r\n  background-color: red;\r\n`;\r\n\r\nconst UserSearch = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const getData = () => {\r\n    if (!hasMore) return;\r\n    unsplash.search\r\n      .users(props.match.params.user, page, 5)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        setUsers([...users, ...json.results]);\r\n        setPage(page + 1);\r\n        if (!totalPages) setTotalPages(json.total_pages);\r\n        if (json.results === 0) setHasMore(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {(value) => {\r\n        return (\r\n          <Container id='user-search-container'>\r\n            <GoToTop />\r\n            <Heading>\r\n              Search results for{' '}\r\n              <SearchTerm> {props.match.params.user} </SearchTerm> in\r\n              <SearchTerm> Users</SearchTerm>:\r\n            </Heading>\r\n            <SelectView value={value}></SelectView>\r\n            <HR />\r\n            <InfiniteScroll\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading...</Loader>}>\r\n              <Results\r\n                id='user-search-results'\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}>\r\n                {users.map((user) => {\r\n                  const { height, width } = user.profile_image.large;\r\n                  return (\r\n                    <User id='user'>\r\n                      <Link\r\n                        category='user'\r\n                        id={user.id}\r\n                        to={`/user/${user.username}`}\r\n                        style={linkStyle}\r\n                        key={user.id}>\r\n                        <LinkTitle>{user.username}</LinkTitle>\r\n                        <div style={{ overflow: 'hidden' }}>\r\n                          <Img\r\n                            isGrid={value.isGrid}\r\n                            isColumn={value.isColumn}\r\n                            src={user.profile_image.large}\r\n                            alt={user.username}\r\n                            key={user.id}\r\n                            landscape={width > height}\r\n                          />\r\n                        </div>\r\n                      </Link>\r\n                    </User>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default UserSearch;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LayoutContext } from '../../../App';\r\nimport { Link } from 'react-router-dom';\r\nimport { toJson } from 'unsplash-js';\r\nimport { unsplash } from '../../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport GoToTop from '../../../components/GoToTop';\r\nimport SelectView from '../../../components/SelectView';\r\nimport { Heading } from '../../../components/ui/styles';\r\nconst Loader = styled.div``;\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst Collection = styled.div`\r\n  margin: 15px 50px 15px 50px;\r\n  cursor: pointer;\r\n\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      width: 250px;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      width: 50%;\r\n      flex: 1;\r\n    `}\r\n`;\r\nconst LinkTitle = styled.div`\r\n  padding: 0 0 10px 0;\r\n  font-size: 20px;\r\n  color: var(--third-color);\r\n  text-align: left;\r\n`;\r\nconst Img = styled.div`\r\n  background: url(${(props) => props.src}) no-repeat center center;\r\n  background-size: cover;\r\n  transition: all 10s;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      width: 225px;\r\n      height: 225px;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      width: 500px;\r\n      height: 500px;\r\n    `}\r\n`;\r\n\r\nconst linkStyle = {\r\n  textDecoration: 'none',\r\n  fontSize: '24px',\r\n  padding: '10px',\r\n};\r\n\r\nconst SearchTerm = styled.span`\r\n  color: var(--third-color);\r\n  font-size: 35px;\r\n`;\r\n\r\nconst HR = styled.hr`\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-style: inset;\r\n  border-width: 1px;\r\n  background-color: red;\r\n`;\r\n\r\nconst CollectionSearch = (props) => {\r\n  const [collections, setCollections] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const getData = () => {\r\n    if (!hasMore) return;\r\n    unsplash.search\r\n      .collections(props.match.params.collection, page, 5)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        setCollections([...collections, ...json.results]);\r\n        setPage(page + 1);\r\n        if (!totalPages) setTotalPages(json.total_pages);\r\n        if (json.results === 0) setHasMore(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {(value) => {\r\n        return (\r\n          <Container>\r\n            <GoToTop />\r\n            <Heading>\r\n              Search results for\r\n              <SearchTerm> {props.match.params.collection} </SearchTerm>in\r\n              <SearchTerm> Collections</SearchTerm>:\r\n            </Heading>\r\n            <SelectView value={value}></SelectView>\r\n            <HR />\r\n            <InfiniteScroll\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading ...</Loader>}>\r\n              <Results\r\n                id='collection-search-results'\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}>\r\n                {collections.map((collection) => {\r\n                  return (\r\n                    <Collection id='collection' key={collection.id}>\r\n                      <Link\r\n                        category='collection'\r\n                        id={collection.id}\r\n                        to={`/collection/${collection.id}`}\r\n                        style={linkStyle}\r\n                        key={collection.id}>\r\n                        <LinkTitle>{collection.title}</LinkTitle>\r\n                        <div style={{ overflow: 'hidden' }}>\r\n                          <Img\r\n                            isGrid={value.isGrid}\r\n                            isColumn={value.isColumn}\r\n                            src={collection.cover_photo.urls.small}\r\n                            alt={collection.title}\r\n                            key={collection.id}\r\n                          />\r\n                        </div>\r\n                      </Link>\r\n                    </Collection>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default CollectionSearch;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Photo from '../../components/Photo';\r\nimport { unsplash } from '../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport UserLink from '../../components/UserLink';\r\nimport { LayoutContext } from '../../App';\r\nimport SelectView from '../../components/SelectView';\r\nimport GoToTop from '../../components/GoToTop';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Heading = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  padding: 20px 0 0 20px;\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  ${props =>\r\n    props.landscape\r\n      ? css`\r\n          width: 80vw;\r\n        `\r\n      : css`\r\n          height: 80vh;\r\n        `}\r\n  ${props =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      width: 250px;\r\n      height: 100%;\r\n      padding-left: 15px;\r\n      padding-right: 15px;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 50%;\r\n    `}\r\n`;\r\n\r\nconst Loader = styled.div``;\r\n\r\nconst Collection = props => {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getData = () => {\r\n    console.log(props);\r\n    unsplash.collections\r\n      .getCollectionPhotos(props.match.params.id, page, 10, 'popular')\r\n      .then(toJson)\r\n      .then(json => {\r\n        setPhotos([...photos, ...json]);\r\n        setPage(page + 1);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  if (photos.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {value => {\r\n        return (\r\n          <Container>\r\n            <GoToTop />\r\n            <Heading>\r\n              Collection:\r\n              <SelectView value={value}></SelectView>\r\n            </Heading>\r\n\r\n            <InfiniteScroll\r\n              id='infinite-scroll'\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading ...</Loader>}>\r\n              <Results\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}\r\n                id='landing-results'>\r\n                {photos.map(photo => {\r\n                  const { height, width } = photo;\r\n                  return (\r\n                    <PhotoContainer\r\n                      key={photo.id}\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}\r\n                      landscape={width > height}\r\n                      id='photo-container'>\r\n                      <UserLink\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        key={photo.user.id}\r\n                        id='userlink'\r\n                        photo={photo}\r\n                      />\r\n                      <Photo\r\n                        landscape={width > height}\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        id='photo'\r\n                        key={photo.id}\r\n                        photo={photo}\r\n                      />\r\n                    </PhotoContainer>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Photo from '../../../components/Photo';\r\nimport { unsplash } from '../../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport UserLink from '../../../components/UserLink';\r\nimport { LayoutContext } from '../../../App';\r\nimport SelectView from '../../../components/SelectView';\r\nimport GoToTop from '../../../components/GoToTop';\r\nimport { Heading } from '../../../components/ui/styles';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  margin-top: 25px;\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `};\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin: 50px 20px 20px 20px;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n\r\n\t${(props) =>\r\n    props.landscape\r\n      ? css`\r\n          width: 80vw;\r\n        `\r\n      : css`\r\n          height: 80vh;\r\n        `}\r\n\t${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      width: 250px;\r\n      height: 100%;\r\n      padding-left: 15px;\r\n      padding-right: 15px;\r\n    `} \r\n\t\t${(props) =>\r\n      props.isColumn &&\r\n      css`\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        flex: 1;\r\n        width: 50%;\r\n      `};\r\n`;\r\n\r\nconst SearchTerm = styled.span`\r\n  color: var(--third-color);\r\n  font-size: 35px;\r\n`;\r\n\r\nconst HR = styled.hr`\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-style: inset;\r\n  border-width: 1px;\r\n  background-color: red;\r\n`;\r\n\r\nconst Loader = styled.div``;\r\n\r\nconst PhotoSearch = (props) => {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const getData = async () => {\r\n    if (!hasMore) return;\r\n    await unsplash.search\r\n      .photos(props.match.params.searchTerm, page, 5, {\r\n        orientation: 'portrait',\r\n      })\r\n      .then(toJson)\r\n      .then((json) => {\r\n        setPhotos([...photos, ...json.results]);\r\n        setPage(page + 1);\r\n        if (!totalPages) setTotalPages(json.total_pages);\r\n        if (json.results === 0) setHasMore(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  if (photos.length === 0) {\r\n    return 'No photos found';\r\n  }\r\n\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {(value) => {\r\n        return (\r\n          <Container>\r\n            <GoToTop />\r\n            <Heading>\r\n              Search results for\r\n              <SearchTerm> {props.match.params.searchTerm} </SearchTerm> in\r\n              <SearchTerm> Photos: </SearchTerm>\r\n            </Heading>\r\n            <SelectView value={value} />\r\n            <HR />\r\n            <InfiniteScroll\r\n              id='infinite-scroll'\r\n              pageStart={1}\r\n              loadMore={getData}\r\n              hasMore\r\n              loader={<Loader key={0}>Loading ...</Loader>}>\r\n              <Results\r\n                isGrid={value.isGrid}\r\n                isColumn={value.isColumn}\r\n                id='landing-results'>\r\n                {photos.map((photo) => {\r\n                  const { height, width } = photo;\r\n\r\n                  return (\r\n                    <PhotoContainer\r\n                      key={photo.id}\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}\r\n                      landscape={width > height}\r\n                      id='photo-container'>\r\n                      <UserLink\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        key={photo.id}\r\n                        id='userlink'\r\n                        user={photo.user}\r\n                      />\r\n                      <Photo\r\n                        landscape={width > height}\r\n                        isGrid={value.isGrid}\r\n                        isColumn={value.isColumn}\r\n                        id='photo'\r\n                        photo={photo}\r\n                        key={photo.id}\r\n                      />\r\n                    </PhotoContainer>\r\n                  );\r\n                })}\r\n              </Results>\r\n            </InfiniteScroll>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\nexport default PhotoSearch;\r\n","//getting an issue where the first search you do works, but if you type in a different search term,\r\n//it still displays the first search\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { toJson } from 'unsplash-js';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Photo from '../../components/Photo';\r\nimport { unsplash } from '../../unsplash';\r\nimport styled, { css } from 'styled-components';\r\nimport UserLink from '../../components/UserLink';\r\nimport { LayoutContext } from '../../App';\r\nimport SelectView from '../../components/SelectView';\r\nimport GoToTop from '../../components/GoToTop';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Heading = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  padding: 20px 0 0 0;\r\n  background-color: rgb(250, 250, 250);\r\n`;\r\n\r\nconst Results = styled.div`\r\n  width: 100%;\r\n  ${(props) =>\r\n    props.isGrid &&\r\n    css`\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n    `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\nposition: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  ${(props) =>\r\n    props.landscape\r\n      ? css`\r\n          width: 80vw;\r\n        `\r\n      : css`\r\n          height: 80vh;\r\n        `}\r\n    ${(props) =>\r\n      props.isGrid &&\r\n      css`\r\n        display: flex;\r\n        width: 250px;\r\n        height: 100%;\r\n        padding-left: 15px;\r\n        padding-right: 15px;\r\n      `}\r\n  ${(props) =>\r\n    props.isColumn &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      flex: 1;\r\n      width: 50%;\r\n    `}\r\n`;\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 25px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: red;\r\n  background-color: rgb(250, 250, 250);\r\n  border-radius: 3px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst HR = styled.hr`\r\n  display: block;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-style: inset;\r\n  border-width: 1px;\r\n  background-color: red;\r\n`;\r\n\r\nconst HR1 = styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  content: ' ';\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: var(--main-color);\r\n`;\r\n\r\nconst EmptyMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-top: 20vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 32px;\r\n\r\n  color: var(--third-color);\r\n`;\r\nconst Favorites = () => {\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  const getData = async () => {\r\n    let storedFavorites =\r\n      (await JSON.parse(localStorage.getItem('favorites'))) || [];\r\n\r\n    setFavorites(storedFavorites);\r\n  };\r\n\r\n  const removeFavorite = (photoId) => {\r\n    let nextFavorite = favorites.filter((favorite) => {\r\n      console.log(photoId);\r\n      console.log(favorite.id);\r\n      return photoId !== favorite.id;\r\n    });\r\n    setFavorites(nextFavorite);\r\n\r\n    localStorage.setItem('favorites', JSON.stringify(nextFavorite));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <LayoutContext.Consumer>\r\n      {(value) => {\r\n        return !favorites.length ? (\r\n          <EmptyMessage>\r\n            <div>No favorites to show.</div>\r\n\r\n            <div>\r\n              Try adding some by clicking the{' '}\r\n              <span style={{ color: 'red' }}>&hearts;</span> on your favorite\r\n              pics!\r\n            </div>\r\n          </EmptyMessage>\r\n        ) : (\r\n          <Container id='favorites-container'>\r\n            <GoToTop />\r\n            <Heading id='favorites-heading'>\r\n              Favorites:\r\n              <SelectView value={value}></SelectView>\r\n              <HR1 />\r\n            </Heading>\r\n            <Results\r\n              isGrid={value.isGrid}\r\n              isColumn={value.isColumn}\r\n              id='landing-results'>\r\n              {favorites.map((photo) => {\r\n                const { height, width } = photo;\r\n                return (\r\n                  <PhotoContainer\r\n                    key={photo.id}\r\n                    isGrid={value.isGrid}\r\n                    isColumn={value.isColumn}\r\n                    landscape={width > height}>\r\n                    <UserLink\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}\r\n                      key={photo.user.id}\r\n                      id='userlink'\r\n                      user={photo.user}\r\n                    />\r\n                    <Photo\r\n                      isFavoritePage={'true'}\r\n                      landscape={width > height}\r\n                      isGrid={value.isGrid}\r\n                      isColumn={value.isColumn}\r\n                      id='photo'\r\n                      key={photo.id}\r\n                      photo={photo}\r\n                      photoToRemove={photo}\r\n                    />\r\n                    <Remove\r\n                      onClick={() => removeFavorite(photo.id)}\r\n                      data-tip='Remove from favorites'>\r\n                      x\r\n                    </Remove>\r\n                  </PhotoContainer>\r\n                );\r\n              })}\r\n            </Results>\r\n          </Container>\r\n        );\r\n      }}\r\n    </LayoutContext.Consumer>\r\n  );\r\n};\r\nexport default Favorites;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\r\n\tposition: fixed;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\theight: 7vh;\r\n\tdisplay: flex;\r\n\tbackground-color: var(--main-color);\r\n\t\r\n\tfont-size: 12px;\r\n\tcolor: var(--secondary-color);\r\n`;\r\n\r\nfunction Footer(props) {\r\n\treturn <Container>@Kevin Niemeyer 2020</Container>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport HeaderComponent from './components/Header';\r\nimport LandingPage from './pages/Landing';\r\nimport UserPage from './pages/User';\r\nimport UserSearch from './pages/Search/UserSearch';\r\nimport CollectionsSearch from './pages/Search/CollectionsSearch';\r\nimport Collection from './pages/Collection';\r\nimport PhotosSearch from './pages/Search/PhotosSearch';\r\nimport Favorites from './pages/Favorites';\r\nimport GoToTop from './components/GoToTop';\r\nimport Footer from './components/Footer';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport './reset.css';\r\n\r\nconst FourOhFour = () => <div>Not Found</div>;\r\n\r\nexport const LayoutContext = React.createContext();\r\n\r\nclass App extends React.Component {\r\n  //state for grid/list/column view\r\n  state = {\r\n    isGrid: true,\r\n    isList: false,\r\n    isColumn: false,\r\n  };\r\n\r\n  toggleView = (e) => {\r\n    //get current values from state and copy it\r\n    const currentValues = { ...this.state }; //spread the state object\r\n    //set all copied state values to false\r\n    Object.keys(currentValues).forEach((prop) => {\r\n      currentValues[prop] = false;\r\n    });\r\n    const gridSettings = {\r\n      //paste copy back into state & update the current target.value\r\n      ...currentValues, //spread the object\r\n      [e.target.name]: true,\r\n    };\r\n    this.setState(gridSettings);\r\n\r\n    localStorage.setItem('gridSettings', JSON.stringify(gridSettings));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const gridSettings = localStorage.getItem('gridSettings');\r\n    if (gridSettings) this.setState(JSON.parse(gridSettings));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LayoutContext.Provider\r\n        value={{\r\n          isGrid: this.state.isGrid,\r\n          isList: this.state.isList,\r\n          isColumn: this.state.isColumn,\r\n          toggleView: this.toggleView,\r\n        }}>\r\n        <Router>\r\n          <div className='app-container'>\r\n            <GoToTop />\r\n            <HeaderComponent />\r\n            <div className='routes-container'>\r\n              <Switch>\r\n                <Route exact path='/' component={LandingPage} />\r\n                <Route exact path='/photogram' component={LandingPage} />\r\n                <Route path='/user/:userName' exact component={UserPage} />\r\n                <Route\r\n                  path='/search/users/:user'\r\n                  exact\r\n                  component={UserSearch}\r\n                />\r\n                <Route\r\n                  path='/search/collections/:collection'\r\n                  exact\r\n                  component={CollectionsSearch}\r\n                />\r\n                <Route path='/collection/:id' exact component={Collection} />\r\n                <Route\r\n                  path='/search/photos/:searchTerm'\r\n                  exact\r\n                  component={PhotosSearch}\r\n                />\r\n                <Route path='/favorites' exact component={Favorites} />\r\n                <Route path='/*' component={FourOhFour} />\r\n              </Switch>\r\n            </div>\r\n            <Footer></Footer>\r\n          </div>\r\n        </Router>\r\n      </LayoutContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}